{"version":3,"sources":["scripts/allQuestions.js","scripts/ResultTypes/Result.js","scripts/ResultTypes/FirstFlowResult.js","scripts/ActivityFlowTypes/Question.js","scripts/ActivityFlowTypes/FirstFlow.js","scripts/ResultTypes/SecondFlowResult.js","scripts/ActivityFlowTypes/SecondFlow.js","scripts/ActivityFlowTypes/ActivityFlow.js","scripts/App.js","index.js"],"names":["allQuestions","Result","props","className","style","padding","activityNum","allResults","onClick","showHomeScreen","FirstFlowResult","results","reduce","allResult","result","i","push","key","Question","questionArr","questionNum","split","heading","nextQuestion","FirstFlow","useState","setQuestionNum","userAns","SecondFlowResult","resultObj","forEach","j","initialLoad","sleep","ms","Promise","resolve","setTimeout","SecondFlow","roundNum","setRoundNum","showRoundNum","setShowRoundNum","showRoundNumScreen","a","async","correctAns","ActivityFlow","allActivity","questions","App","activityClicked","setActivityStatus","setActivityNumber","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2de98302.chunk.js","sourcesContent":["var allQuestions = {\r\n    \"name\": \"Error Find\",\r\n    \"heading\": \"This game teaches you to find mistakes in written text.\",\r\n    \"activities\": [\r\n        {\r\n            \"activity_name\": \"Activity One\",\r\n            \"order\": 1,\r\n            \"questions\": [\r\n                {\r\n                    \"is_correct\": false,\r\n                    \"stimulus\": \"I really enjoy *to play football* with friends.\",\r\n                    \"order\": 1,\r\n                    \"user_answers\": [],\r\n                    \"feedback\": \"I really enjoy *playing football* with friends.\"\r\n                },\r\n                {\r\n                    \"is_correct\": true,\r\n                    \"stimulus\": \"I think that *starting* a school science magazine is an excellent idea!\",\r\n                    \"order\": 2,\r\n                    \"user_answers\": [],\r\n                    \"feedback\": \"I think that *starting* a school science magazine is an excellent idea!\"\r\n                },\r\n                {\r\n                    \"is_correct\": false,\r\n                    \"stimulus\": \"Watching films at home is *more cheaper* than at the cinema.\",\r\n                    \"order\": 3,\r\n                    \"user_answers\": [],\r\n                    \"feedback\": \"Watching films at home is *cheaper* than at the cinema.\"\r\n                },\r\n                {\r\n                    \"is_correct\": false,\r\n                    \"stimulus\": \"On the one hand, small cameras are comfortable. *In the other hand*, larger ones take better photos.\",\r\n                    \"order\": 4,\r\n                    \"user_answers\": [],\r\n                    \"feedback\": \"On the one hand, small cameras are comfortable. *On the other hand*, larger ones take better photos.\"\r\n                },\r\n                {\r\n                    \"is_correct\": false,\r\n                    \"stimulus\": \"My friend *like listening* to songs in English\",\r\n                    \"order\": 5,\r\n                    \"user_answers\": [],\r\n                    \"feedback\": \"My friend *likes listening* to songs in English\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"activity_name\": \"Activity Two\",\r\n            \"order\": 2,\r\n            \"questions\": [\r\n                {\r\n                    \"round_title\": \"Round 1\",\r\n                    \"order\": 1,\r\n                    \"questions\": [\r\n                        {\r\n                            \"is_correct\": false,\r\n                            \"stimulus\": \"Watching films at home is *more cheaper* than at the cinema.\",\r\n                            \"order\": 1,\r\n                            \"user_answers\": [],\r\n                            \"feedback\": \"Watching films at home is *cheaper* than at the cinema.\"\r\n                        },\r\n                        {\r\n                            \"is_correct\": false,\r\n                            \"stimulus\": \"On the one hand, small cameras are comfortable. *In the other hand*, larger ones take better photos.\",\r\n                            \"order\": 2,\r\n                            \"user_answers\": [],\r\n                            \"feedback\": \"On the one hand, small cameras are comfortable. *On the other hand*, larger ones take better photos.\"\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"round_title\": \"Round 2\",\r\n                    \"order\": 2,\r\n                    \"questions\": [\r\n                        {\r\n                            \"is_correct\": true,\r\n                            \"stimulus\": \"I can't go out because I *haven't finished* my homework yet.\",\r\n                            \"order\": 1,\r\n                            \"user_answers\": [],\r\n                            \"feedback\": \"I can't go out because I *haven't finished* my homework yet.\"\r\n                        },\r\n                        {\r\n                            \"is_correct\": false,\r\n                            \"stimulus\": \"My friend *like listening* to songs in English\",\r\n                            \"order\": 2,\r\n                            \"user_answers\": [],\r\n                            \"feedback\": \"My friend *likes listening* to songs in English\"\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}\r\nexport default allQuestions;","import React from 'react';\r\n\r\nfunction Result(props){\r\n\treturn(\r\n\t\t<div className=\"centerContent homeScreen\" style={{padding:0}}>\r\n\t\t\t<div className=\"boldText smallerText\">\r\n\t\t\t\t{props.activityNum}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"biggerText boldText\" style={{padding:\"10px 20px\"}}>\r\n\t\t\t\tResults\r\n\t\t\t</div>\r\n\t\t\t{props.allResults}\r\n\t\t\t<button onClick={props.showHomeScreen}> Home </button>\r\n\t\t</div>\r\n\t)\r\n}\r\nexport default Result;","import React from 'react';\r\nimport Result from './Result';\r\n\r\nfunction FirstFlowResult(props){\r\n\tlet allResults = props.results.reduce((allResult,result,i)=>{\r\n\t\tallResult.push(<div className=\"resultDiv\" key={i}><span>Q{i+1}</span><span>{result}</span></div>);\r\n\t\treturn allResult;\r\n\t},[])\r\n\treturn (\r\n            <Result allResults={allResults} showHomeScreen={props.showHomeScreen}\r\n             activityNum={\"ACTIVITY ONE\"}/>\r\n            )\r\n}\r\nexport default FirstFlowResult;","import React from 'react';\r\nfunction Question(props){\r\n\tlet questionArr;\r\n\t//Changes to show the text inbetween * in bold\r\n\tif(props.allQuestions[props.questionNum-1]){\r\n\t\tquestionArr = props.allQuestions[props.questionNum-1]['stimulus'].split('*');\r\n\t}\r\n\treturn(\r\n\t\t<div className=\"centerContent\">\r\n  \t\t\t<div className=\"extraMargin boldText\">{props.heading}</div>\r\n  \t\t\t<div className=\"biggerText boldText extraMargin\">Q{props.questionNum}.</div>\r\n  \t\t\t<div className=\"greyBackground\">\r\n      \t\t\t{questionArr[0]}<strong>{questionArr[1]}</strong>{questionArr[2]}\r\n      \t\t</div>\r\n      \t\t<div>\r\n      \t\t\t<button className=\"centerButton\" onClick={()=>props.nextQuestion(true)}>CORRECT</button>\r\n      \t\t\t<button className=\"centerButton\" onClick={()=>props.nextQuestion(false)}>INCORRECT</button>\r\n      \t\t</div>\r\n  \t\t</div>\r\n\t);\r\n}\r\nexport default Question;","import React, { useState } from 'react';\r\nimport FirstFlowResult from '.././ResultTypes/FirstFlowResult';\r\nimport Question from './Question';\r\n\r\n\r\nlet result = [];\r\nfunction FirstFlow(props){\r\n\tlet allQuestions = props['questions'];\r\n\tconst [questionNum, setQuestionNum] = useState(1);\r\n\tfunction showHomeScreen(){\r\n\t\tresult=[];\r\n\t\tprops.showHomeScreen();\r\n\t}\r\n\tfunction nextQuestion(userAns){\r\n\t\t//questionNum -1 => to match the array index\r\n\t\tlet correctAns = allQuestions[questionNum-1]['is_correct'];\r\n\t\t//Construct the result array based on user answer\r\n\t\tuserAns === correctAns ? result.push('CORRECT') : result.push('FALSE')\r\n\t\tsetQuestionNum(questionNum+1)\r\n\t}\r\n\treturn (\r\n    \t<div>\r\n    \t{\r\n    \t\t//If there are more questions, then show the questions.Else, show the result screen\r\n      \t\tallQuestions[questionNum-1] ? (\r\n\t      \t\t<Question allQuestions={allQuestions} nextQuestion={nextQuestion}\r\n\t      \t\tquestionNum={questionNum} heading={\"ACTIVITY ONE\"}/>\r\n\t      \t\t):(\r\n\t      \t\t\t<FirstFlowResult results={result} showHomeScreen={showHomeScreen} />\r\n\t      \t\t)\r\n    \t}\r\n    \t</div>)\r\n\r\n}\r\nexport default FirstFlow;","import React from 'react';\r\nimport Result from './Result';\r\nfunction SecondFlowResult(props){\r\n\tlet allResults = props.results.reduce((allResult,resultObj,i)=>{\r\n\t\t//Show the round number for each round\r\n\t\tallResult.push(<div className=\"resultDiv\" key={i}><span>ROUND {i+1}</span></div>);\r\n\t\tresultObj[\"result\"].forEach((result,j)=>{\r\n\t\t\tallResult.push(<div className=\"resultDiv\" key={\"r\"+i+\"q\"+j}><span>Q{j+1}</span><span>{result}</span></div>);\r\n\t\t})\r\n\t\treturn allResult;\r\n\t},[])\r\n\treturn (\r\n\t\t<Result allResults={allResults} showHomeScreen={props.showHomeScreen} activityNum={\"ACTIVITY TWO\"}/>\r\n\t)\r\n\r\n}\r\nexport default SecondFlowResult;","import React, { useState } from 'react';\r\nimport SecondFlowResult from '.././ResultTypes/SecondFlowResult';\r\nimport Question from './Question';\r\n\r\nlet result = [], initialLoad=true;\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nfunction SecondFlow(props){\r\n\tconst [roundNum, setRoundNum] = useState(1);\r\n\tconst [questionNum, setQuestionNum] = useState(1);\r\n\tconst [showRoundNum, setShowRoundNum] = useState(false);\r\n\tlet allQuestions;\r\n\r\n\tif(props['questions'][roundNum-1]){\r\n\t\tallQuestions = props['questions'][roundNum-1]['questions'];\r\n\t}\r\n\t//to show the round number for sometime\r\n\tasync function showRoundNumScreen(){\r\n\t\t\tsetShowRoundNum(true);\r\n\t\t\tawait sleep(1000);\r\n\t\t\tsetShowRoundNum(false);\r\n\t}\r\n\tif(initialLoad){\r\n\t\tinitialLoad = false;\r\n\t\tshowRoundNumScreen();\r\n\t}\r\n\tfunction showHomeScreen(){\r\n\t\tresult=[];\r\n\t\tinitialLoad=true;\r\n\t\tprops.showHomeScreen();\r\n\t}\r\n\tfunction nextQuestion(userAns){\r\n\t\tallQuestions = props['questions'][roundNum-1]['questions'];\r\n\t\tlet correctAns = allQuestions[questionNum-1]['is_correct'];\r\n\t\t//Construct the result array based on user answer\r\n\t\t//Result array is an array of Obj-> An object for each round\r\n\t\tif(!result[roundNum-1]){\r\n\t\t\tresult[roundNum-1] ={\"round\":roundNum,\"result\":[]}\r\n\t\t}\r\n\t\t\r\n\t\tuserAns === correctAns ? result[roundNum-1][\"result\"].push('CORRECT'):\r\n\t\t\t\t\t\t\t\t result[roundNum-1][\"result\"].push('FALSE')\r\n\t\t\r\n\t\t//If there are no more questions, go to next round and start from 1st question\r\n\t\t//Else go to next question in same round\r\n\t\tif(!allQuestions[questionNum]){\r\n\t\t\t//Show Round screen only when there are more rounds\r\n\t\t\tif(props['questions'][roundNum]){\r\n\t\t\t\tshowRoundNumScreen();\r\n\t\t\t}\r\n\t\t\tsetRoundNum(roundNum+1);\r\n\t\t\tsetQuestionNum(1);\r\n\r\n\t\t}else{\r\n\t\t\tsetQuestionNum(questionNum+1);\r\n\t\t}\r\n\t}\r\n\t\r\n\treturn (\r\n    \t<div>\r\n    \t{\r\n\t\t\tshowRoundNum &&\r\n\t\t\t<div className=\"centerContent\">\r\n    \t\t\t<div className=\"extraMargin boldText\">\r\n    \t\t\t\tACTIVITY TWO\r\n    \t\t\t</div>\r\n    \t\t\t<div className=\"biggerText boldText extraMargin\">\r\n    \t\t\t\tROUND {roundNum}\r\n    \t\t\t</div>\r\n    \t\t</div>\r\n    \t}\r\n    \t{\r\n    \t\t//If there are more questions, then show the questions.Else, show the result screen\r\n      \t\t!showRoundNum && allQuestions ? (\r\n\t      \t\t<Question allQuestions={allQuestions} nextQuestion={nextQuestion}\r\n\t      \t\tquestionNum={questionNum} heading={\"ACTIVITY TWO / Round \"+roundNum}/>\r\n\t      \t\t):(\r\n\t      \t\t!showRoundNum &&\r\n\t      \t\t\t<SecondFlowResult results={result} showHomeScreen={showHomeScreen}/>\r\n\t      \t\t)\r\n    \t}\r\n    \t</div>)\r\n}\r\nexport default SecondFlow;","import React from 'react';\r\nimport FirstFlow from './FirstFlow';\r\nimport SecondFlow from './SecondFlow';\r\n//This is activity landing page\r\nfunction ActivityFlow(props){\r\n\tlet allActivity = props.allActivity;\r\n\treturn (\r\n      <div>\r\n      \t{\r\n      \t\t//Show corresponding flow based on the selected activity\r\n      \t\tprops.activityNum === 1 &&\r\n      \t\t<FirstFlow questions={allActivity[0]['questions']} showHomeScreen={props.showHomeScreen}/>\r\n      \t}\r\n      \t{\r\n      \t\tprops.activityNum === 2 &&\r\n      \t    <SecondFlow questions={allActivity[1]['questions']} showHomeScreen={props.showHomeScreen}/>\r\n      \t}\r\n      </div>)\r\n\r\n}\r\nexport default ActivityFlow;","import React, { useState } from 'react';\nimport '../css/App.css';\nimport allQuestions from './allQuestions';\nimport ActivityFlow from './ActivityFlowTypes/ActivityFlow';\n\nfunction App() {\n  //allQuestion is the JSON data from s3\n  let allActivity = allQuestions['activities'];\n  const [activityClicked, setActivityStatus] = useState(false);\n  const [activityNum, setActivityNumber] = useState(0);\n\n  return (\n    <div>\n      {\n        //Show home page when activity is not clicked\n        !activityClicked &&\n        <div className=\"centerContent homeScreen\">\n          <header>\n            <h3>CAE</h3>\n            <h1>Error Find</h1>\n          </header>\n            <button onClick={()=>{setActivityNumber(1);setActivityStatus(true)}}>\n              ACTIVITY ONE\n            </button>\n            <button onClick={()=>{setActivityNumber(2);setActivityStatus(true)}}>\n              ACTIVITY TWO\n            </button>\n        </div>\n      }\n      {\n        activityClicked &&\n        <ActivityFlow allActivity={allActivity} activityNum={activityNum} \n        showHomeScreen={()=>{setActivityStatus(false)}}/>\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './scripts/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}